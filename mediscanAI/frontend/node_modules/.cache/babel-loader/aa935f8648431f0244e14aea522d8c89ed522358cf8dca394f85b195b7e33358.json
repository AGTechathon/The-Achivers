{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smutk\\\\OneDrive\\\\Documents\\\\hackethon\\\\The-Achivers\\\\mediscanAI\\\\frontend\\\\src\\\\components\\\\EmotionSelector.tsx\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { Smile, Frown, Brain, Coffee, Heart } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emotions = [{\n  name: 'happy',\n  icon: Smile,\n  color: 'bg-yellow-100 hover:bg-yellow-200',\n  tooltip: 'Feeling joyful and content'\n}, {\n  name: 'sad',\n  icon: Frown,\n  color: 'bg-blue-100 hover:bg-blue-200',\n  tooltip: 'Feeling down or unhappy'\n}, {\n  name: 'stressed',\n  icon: Brain,\n  color: 'bg-red-100 hover:bg-red-200',\n  tooltip: 'Feeling overwhelmed or tense'\n}, {\n  name: 'calm',\n  icon: Coffee,\n  color: 'bg-green-100 hover:bg-green-200',\n  tooltip: 'Feeling relaxed and at ease'\n}, {\n  name: 'anxious',\n  icon: Heart,\n  color: 'bg-purple-100 hover:bg-purple-200',\n  tooltip: 'Feeling nervous or uneasy'\n}];\nexport const EmotionSelector = ({\n  selectedEmotion,\n  onSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap justify-center gap-6 p-6\",\n    children: emotions.map(({\n      name,\n      icon: Icon,\n      color,\n      tooltip\n    }) => /*#__PURE__*/_jsxDEV(motion.div, {\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0.95\n      },\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(motion.button, {\n        onClick: () => onSelect(name),\n        className: `${color} ${selectedEmotion === name ? 'ring-4 ring-offset-2 ring-blue-500' : 'shadow-md'} p-6 rounded-xl flex flex-col items-center transition-all duration-200`,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          className: `w-10 h-10 mb-2 ${selectedEmotion === name ? 'text-blue-600' : 'text-gray-700'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"capitalize text-gray-800\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 10\n        },\n        whileHover: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"absolute top-full mt-2 bg-gray-800 text-white text-sm rounded-md p-2 shadow-lg text-center w-32\",\n        children: tooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = EmotionSelector;\nvar _c;\n$RefreshReg$(_c, \"EmotionSelector\");","map":{"version":3,"names":["React","motion","Smile","Frown","Brain","Coffee","Heart","jsxDEV","_jsxDEV","emotions","name","icon","color","tooltip","EmotionSelector","selectedEmotion","onSelect","className","children","map","Icon","div","whileHover","scale","whileTap","button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","initial","opacity","y","_c","$RefreshReg$"],"sources":["C:/Users/smutk/OneDrive/Documents/hackethon/The-Achivers/mediscanAI/frontend/src/components/EmotionSelector.tsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Smile, Frown, Brain, Coffee, Heart } from 'lucide-react';\r\nimport type { Emotion } from '../types';\r\n\r\ninterface EmotionSelectorProps {\r\n  selectedEmotion: Emotion | null;\r\n  onSelect: (emotion: Emotion) => void;\r\n}\r\n\r\nconst emotions = [\r\n  { \r\n    name: 'happy' as Emotion, \r\n    icon: Smile, \r\n    color: 'bg-yellow-100 hover:bg-yellow-200', \r\n    tooltip: 'Feeling joyful and content' \r\n  },\r\n  { \r\n    name: 'sad' as Emotion, \r\n    icon: Frown, \r\n    color: 'bg-blue-100 hover:bg-blue-200', \r\n    tooltip: 'Feeling down or unhappy' \r\n  },\r\n  { \r\n    name: 'stressed' as Emotion, \r\n    icon: Brain, \r\n    color: 'bg-red-100 hover:bg-red-200', \r\n    tooltip: 'Feeling overwhelmed or tense' \r\n  },\r\n  { \r\n    name: 'calm' as Emotion, \r\n    icon: Coffee, \r\n    color: 'bg-green-100 hover:bg-green-200', \r\n    tooltip: 'Feeling relaxed and at ease' \r\n  },\r\n  { \r\n    name: 'anxious' as Emotion, \r\n    icon: Heart, \r\n    color: 'bg-purple-100 hover:bg-purple-200', \r\n    tooltip: 'Feeling nervous or uneasy' \r\n  },\r\n];\r\n\r\nexport const EmotionSelector: React.FC<EmotionSelectorProps> = ({ selectedEmotion, onSelect }) => {\r\n  return (\r\n    <div className=\"flex flex-wrap justify-center gap-6 p-6\">\r\n      {emotions.map(({ name, icon: Icon, color, tooltip }) => (\r\n        <motion.div\r\n          key={name}\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.95 }}\r\n          className=\"relative\"\r\n        >\r\n          <motion.button\r\n            onClick={() => onSelect(name)}\r\n            className={`${color} ${\r\n              selectedEmotion === name \r\n                ? 'ring-4 ring-offset-2 ring-blue-500' \r\n                : 'shadow-md'\r\n            } p-6 rounded-xl flex flex-col items-center transition-all duration-200`}\r\n          >\r\n            <Icon \r\n              className={`w-10 h-10 mb-2 ${\r\n                selectedEmotion === name ? 'text-blue-600' : 'text-gray-700'\r\n              }`} \r\n            />\r\n            <span className=\"capitalize text-gray-800\">{name}</span>\r\n          </motion.button>\r\n\r\n          {/* Tooltip */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 10 }}\r\n            whileHover={{ opacity: 1, y: 0 }}\r\n            className=\"absolute top-full mt-2 bg-gray-800 text-white text-sm rounded-md p-2 shadow-lg text-center w-32\"\r\n          >\r\n            {tooltip}\r\n          </motion.div>\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}